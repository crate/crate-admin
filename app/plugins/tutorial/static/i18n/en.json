{
    "NAVIGATION": {
        "HELP": "Help"
    },
    "TUTORIAL": {
        "TITLE": "Get started with sample data",
        "PARAGRAPH_1": "Sometimes it helps to test with something real. The Twitter importer let's you quickly test your new CrateDB instance with real data. Press the button, and watch your cluster fill up in real time with live Tweets. You can always delete them later.",
        "PARAGRAPH_2": "After the authentication, Twitter allows you to consume a small fraction of their public stream, hence the slow import. In a production environment you can import hundreds of thousands of records per second.",
        "INSTRUCTION_1": "Your imported tweets will be stored in a table called {tweets}.",
        "TWEETS": "tweets",
        "INSTRUCTION_2": "Click {tables} on the left to see the table and its stats. You should see its records increase as the tweets import.",
        "TABLES": "TABLES",
        "INSTRUCTION_3": "Click {console} to query the table directly with SQL. For starters, you can try: {query} after you have added some tweets.",
        "CONSOLE": "CONSOLE",
        "IMPORT_TWEETS": "Import tweets for testing",
        "IMPORTING_TWEETS": "Importing tweets.",
        "TWEETS_IMPORTED": "tweets imported",
        "STOP_IMPORTING_TWEETS": "Enough! Stop importing tweets"
    },
    "CALCULATOR": {
        "TITLE": "Sharding calculator",
        "DESCRIPTION": "A simple tool to calculate some generic sharding recommendation for a crate table.",
        "IMPORT_HEADING": "Read data from existing table",
        "HARDWARE_HEADING": "Hardware",
        "CPUS_HEADING": "CPUs",
        "CPUS_DESCRIPTION": "How many cores do the machines have you are going to run your nodes on?",
        "STORAGE_HEADING": "Storage",
        "STORAGE_DESCRIPTION": "You are using SSDs instead of HDDs? Good.",
        "RAMSTORAGE_HEADING": "RAM/Storage",
        "RAMSTORAGE_DESCRIPTION": "The proportion of RAM and storage generally influences the performance. A ratio around 1:24 is recommended, if you do not care for speed that much, you can go a little below that, if you do, you can go higher, but astronomical are not really improve performance anymore.",
        "RAMSTORAGE_INPUT_1": "Every GiB of RAM serves",
        "RAMSTORAGE_INPUT_2": "GiB of storage.",
        "RAM_HEADING": "RAM",
        "RAM_DESCRIPTION_1": "How much RAM do the machines have you are going to run your nodes on? It is good practice to have half of it assigned as heap to the JVM and the rest for the OS. 64GiB are a good guide value.",
        "RAM_DESCRIPTION_2": "Byte",
        "RAM_DESCRIPTION_3": "Having more than 32GiB of Heap for the JVM is not very beneficial, it will run into garbage collection issues.",
        "RAID_HEADING": "RAID?",
        "RAID_DESCRIPTION": "CrateDB is distributed and self healing, replicas of the data are distributed among the cluster, if they are enabled. This is probably something you want, because it makes something like RAID1 superfluous and even enables the use of RAID0 in a safe way.",
        "USECASE_HEADING": "Use-Case",
        "DATA_HEADING": "Data",
        "DATA_DESCRIPTION_1": "So, this is what crate is about. You have probably been using something else before, so you should generally know how much data there is.",
        "DATA_DESCRIPTION_2": "How much data is being inserted?",
        "DATA_DESCRIPTION_3": "Byte per",
        "DATA_DESCRIPTION_4": "And for how long is it supposed to be stored?",
        "DATA_DESCRIPTION_5": "Since crate is horizontally scalable you can later on decide that the data is supposed to be stored for longer, by adding nodes.",
        "DATA_DESCRIPTION_6": "OR, if itâ€™s really not known yet, simply specify some expected table size.",
        "DATA_DESCRIPTION_7": "Byte",
        "PARTITION_HEADING": "Partitioning",
        "PARTITION_DESCRIPTION_1": "Crate organizes data by itself into logical units, usually by time. If setting a good time frame for partitioning is set, can greatly enhance the performance.",
        "PARTITION_DESCRIPTION_2": "Choose a batch size in which the data will be used later. If you have no idea, one month is a good suggestion.",
        "PARTITION_DESCRIPTION_3": "You have expected table size selected, in this case you need to specify the amount of partitions manually.",
        "REDUNDANCY_HEADING": "Redundancy",
        "REDUNDANCY_DESCRIPTION": "As said crate distributes replicas of the data among its network, one replica should be affordable storage wise, for redundancy and data integrity. Having no replicas is of course easy on storage but not advisable. By having more replicas the query speed can be enhanced significantly, because one query then can run on several copies of the same data simultaneously. Sadly that is very storage intense and does affect the write speed a little. So one replica is the normal way to go if you are very into query speed you can go with 3-4. Aside from that, having more replicas than nodes never makes sense. They have nowhere to go.",
        "CALCULATION_HEADING": "Calculation",
        "CALCULATION_DESCRIPTION": "Based on the provided data, this little script came up with a recommendation.",
        "NODES_HEADING": "Nodes",
        "NODES_DESCRIPTION_1": "You should use",
        "NODES_DESCRIPTION_2": "nodes with",
        "NODES_DESCRIPTION_3": "of RAM and",
        "NODES_DESCRIPTION_4": "of storage each.",
        "SHARDS_HEADING": "Shards",
        "SHARDS_DESCRIPTION_1": "The partitions should be divided into",
        "SHARDS_DESCRIPTION_2": "shards each.",
        "HOUR": "hour",
        "DAY": "day",
        "WEEK": "week",
        "MONTH": "month",
        "YEAR": "year"
    }
}
